---
import StarRating from './StarRating';

const { albums } = Astro.props;

const dateFormatter = new Intl.DateTimeFormat('en-ca', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});
---

<div>
  <h2 class='text-3xl font-semibold leading-tight tracking-tight text-gray-900'>
    History
  </h2>
  <ul role='list' class='divide-y divide-gray-100'>
    {
      albums?.reverse().map((entry) => {
        return (
          <li class='flex flex-col sm:flex-row justify-between gap-6 py-5 mx-2 sm:mx-auto'>
            <div class='flex gap-x-4'>
              <img
                class='h-12 w-12 flex-none bg-gray-50'
                src={entry.album.images[0].url}
                alt=''
              />
              <div class='min-w-0 flex-auto'>
                <p class='text-sm font-semibold leading-6 text-gray-900'>
                  {entry.album.name}
                </p>
                <p class='mt-1 truncate text-xs leading-5 text-gray-500'>
                  {entry.album.artist}
                </p>
              </div>
            </div>
            <div class='sm:flex sm:flex-col sm:items-end'>
              <p class='text-sm leading-6 text-gray-900'>
                <StarRating rating={entry.rating} max={5} />
              </p>
              <p class='mt-1 text-xs leading-5 text-gray-500'>
                <time datetime={entry.generatedAt}>
                  Rated on {dateFormatter.format(new Date(entry.generatedAt))}
                </time>
              </p>
              <p class='text-xs text-gray-500 italic'>
                Global Rating:{' '}
                <span class='not-italic'>{entry.globalRating}</span>
              </p>
            </div>
          </li>
        );
      })
    }
  </ul>
</div>
